on: [push, pull_request]

name: CI test and lint

jobs:
  check_lint_test_linux:
    name: Check test and lint Linux
    runs-on: ubuntu-latest
    #container: ubuntu:20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Update package list
        run: sudo apt-get update

      - name: Install utils
        run: sudo apt-get install curl wget -y

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install Alsa devel
        run: sudo apt-get install libasound2-dev -y

      - name: Install PulseAudio
        run: DEBIAN_FRONTEND="noninteractive" sudo apt-get install libpulse0 libpulse-dev -y

      - name: Install Jack
        run: DEBIAN_FRONTEND="noninteractive" sudo apt-get install libjack-dev -y

      - name: Install OpenSSL
        run: sudo apt-get install openssl libssl-dev -y

      - name: Run cargo check
        run: cargo check

      - name: Run cargo check nodefault
        run: cargo check --no-default-features

      - name: Run cargo test with all supported backends
        run: cargo test --features bluez-backend,cpal-backend,jack-backend,pulse-backend,

      - name: Run cargo test with all optional features
        run: cargo test --features 32bit,debug,fftw,secure-websocket

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

  check_test_arm:
    name: Check and test Linux arm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: armv7-unknown-linux-gnueabihf

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build image
        run: docker build -t cross/armv7:v1 --file Dockerfile_armv7 ./

      - name: Run cargo check
        run: cross check --target armv7-unknown-linux-gnueabihf

      - name: Run cargo test for arm
        run: cross test --target armv7-unknown-linux-gnueabihf

  check_test_arm64:
    name: Check and test Linux arm 64bit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-unknown-linux-gnu

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build image
        run: docker build -t cross/armv8:v1 --file Dockerfile_armv8 ./ 

      - name: Run cargo check
        run: cross check --target aarch64-unknown-linux-gnu

      - name: Run cargo test for arm
        run: cross test --target aarch64-unknown-linux-gnu

  check_test_armv6:
    name: Check and test Linux arm v6
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: arm-unknown-linux-gnueabihf
          override: true

      - name: Build image
        run: docker build -t cross/armv6:v1 --file Dockerfile_armv6 ./

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          use-cross: true
          args: --target arm-unknown-linux-gnueabihf

      - name: Run cargo test for arm
        uses: actions-rs/cargo@v1
        with:
          command: test
          use-cross: true
          args: --target arm-unknown-linux-gnueabihf
        env: 
          LD_LIBRARY_PATH: /usr/lib/arm-linux-gnueabihf


  check_test_windows:
    name: Check and test Windows
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo check
        run: cargo check --no-default-features

      - name: Run cargo test
        run: cargo test --no-default-features

  check_test_macos:
    name: Check and test macOS
    runs-on: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo check
        run: cargo check --no-default-features

      - name: Run cargo test
        run: cargo test --no-default-features

  check_macos_arm:
    name: Check macOS aarch64
    runs-on: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Run cargo check for arm
        run: cross check --target aarch64-apple-darwin
        env:
          SDKROOT: /Applications/Xcode_14.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk
          MACOSX_DEPLOYMENT_TARGET: 13.1
          DEVELOPER_DIR: /Applications/Xcode_14.2.app



