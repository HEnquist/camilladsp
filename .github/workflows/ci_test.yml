on: [push, pull_request]

name: CI test and lint

jobs:
  check_lint_linux:
    name: Check test and lint Linux
    runs-on: ubuntu-latest
    container: ubuntu:20.04

    env:
      # for apt-get: otherwise installing tzdata gets stuck asking about the time zone.
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Update package list
        run: apt-get update

      - name: Install utils
        run: apt-get install build-essential curl wget -y

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install Alsa devel
        run: apt-get install libasound2-dev -y

      - name: Install PulseAudio
        run: apt-get install libpulse0 libpulse-dev -y

      - name: Install OpenSSL
        run: apt-get install openssl libssl-dev -y

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Run cargo check nodefault
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings



  check_arm:
    name: Check and test Linux arm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: armv7-unknown-linux-gnueabihf
          override: true

      - name: Build image
        run: docker build -t cross/armv7:v1 ./

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          use-cross: true
          args: --target armv7-unknown-linux-gnueabihf --no-default-features --features alsa-backend --features websocket

      - name: Run cargo test for arm
        uses: actions-rs/cargo@v1
        with:
          command: test
          use-cross: true
          args: --target armv7-unknown-linux-gnueabihf --no-default-features --features alsa-backend --features websocket


  check_lint_windows:
    name: Check and test Windows
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features --features cpal-backend

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features cpal-backend

  check_lint_macos:
    name: Check and test macOS
    runs-on: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features --features cpal-backend

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features cpal-backend




